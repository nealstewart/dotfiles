set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Bundles
Bundle 'airblade/vim-rooter'
Bundle 'scrooloose/syntastic'
Bundle 'scrooloose/nerdtree'
Bundle 'kien/ctrlp.vim'
Bundle 'sickill/vim-pasta'
Bundle 'Lokaltog/vim-powerline'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-markdown'
Bundle 'mileszs/ack.vim'
Bundle 'Raimondi/delimitMate'
Bundle 'ervandew/supertab'
Bundle 'plasticboy/vim-markdown'
Bundle 'airblade/vim-gitgutter'
Bundle 'helino/vim-json'

map <C-n> :NERDTreeToggle<CR>

let g:ctrlp_custom_ignore = {
      \ 'dir': '\v[\/](haproxy-1.4.20|node_modules|.git|yui-compressor)$',
      \ }

" enable syntastic
let g:syntastic_enable_signs=1
let g:syntastic_auto_loc_list=1
let g:syntastic_disabled_filetypes = ['sass', 'html']
map <F5> :SyntasticToggleMode<CR>:redraw!<CR>

" enable syntastic for c
let g:syntastic_c_check_header = 1
let g:syntastic_c_auto_refresh_includes = 1
let b:syntastic_c_cflags = ' -std=c99'

au BufRead,BufNewFile *.json set filetype=json

" syntax highlighting
syntax on
colorscheme Tomorrow-Night-Eighties

set guifont=Inconsolata-dz\ for\ Powerline:h12

" lots of colors!
set t_Co=256

" indenting
filetype indent on
set autoindent

" tabs should be two spaces always
set ts=2
set smarttab
set expandtab
set shiftwidth=2

" default sizes
set colorcolumn=80

" fold method
set foldmethod=syntax
set foldnestmax=4      "deepest fold is 10 levels"
set nofoldenable
set nowrap

" show matching braces, brackets, etc
set showmatch

set smartcase

" highlight search
set hlsearch
" search character by character
set incsearch

" Better file completion
set wildmenu
set wildmode=list:longest

" turn on line numbering
set nu

" turn on mouse
set mouse=a

" fixes backspace
set backspace=indent,eol,start

fun! <SID>StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  call cursor(l, c)
endfun
autocmd BufWritePre <buffer> :call <SID>StripTrailingWhitespaces()

au BufRead,BufNewFile *.md set filetype=markdown
